'use strict';

var utils = require('style-dictionary/utils');
var modifyColor = require('./modifyColor.cjs');

/**
 * Helper: Transforms color tokens with tokens studio color modifiers
 */
function transformColorModifiers(token, options) {
    const modifier = token.$extensions['studio.tokens']?.modify;
    // If some of the modifier props contain references or the modifier itself is a reference
    // we should return undefined to manually defer this transformation until the references are resolved
    // see: https://github.com/amzn/style-dictionary/blob/v4/docs/transforms.md#defer-transitive-transformation-manually
    if (utils.usesReferences(modifier) || Object.values(modifier).some(prop => utils.usesReferences(prop))) {
        return undefined;
    }
    if (options?.format) {
        modifier.format = options.format;
    }
    return modifyColor.modifyColor(token.$value ?? token.value, modifier);
}

exports.transformColorModifiers = transformColorModifiers;
