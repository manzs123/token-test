/**
 * @typedef {import('../types/Volume.d.ts').Volume} Volume
 * @typedef {import('../types/DesignToken.d.ts').Dictionary} Dictionary
 * @typedef {import('../types/Config.d.ts').PlatformConfig} PlatformConfig
 * @typedef {import('../types/Config.d.ts').Config} Config
 */
/**
 * Takes a platform config object and a dictionary
 * object and builds all the files. Dictionary object
 * should have been transformed and resolved before this
 * point.
 * @memberOf StyleDictionary
 * @param {Dictionary} dictionary
 * @param {PlatformConfig} platform
 * @param {Config} options
 * @param {Volume} [vol]
 */
export default function buildFiles(dictionary: Dictionary, platform: PlatformConfig, options: Config, vol?: import("../types/Volume.d.ts").Volume | undefined): Promise<(null | undefined)[] | undefined>;
export type Volume = import('../types/Volume.d.ts').Volume;
export type Dictionary = import('../types/DesignToken.d.ts').Dictionary;
export type PlatformConfig = import('../types/Config.d.ts').PlatformConfig;
export type Config = import('../types/Config.d.ts').Config;
