/**
 * @typedef {import('../../types/DesignToken.d.ts').DesignTokens} DesignTokens
 * @typedef {import('../../types/DesignToken.d.ts').DesignToken} DesignToken
 * @typedef {import('../../types/Preprocessor.d.ts').Preprocessor} Preprocessor
 * @typedef {import('../../types/Preprocessor.d.ts').preprocessor} preprocessor
 */
/**
 * @param {DesignTokens} tokens
 * @returns
 */
export function typeDtcgDelegate(tokens: DesignTokens): import("../../types/DesignToken.d.ts").DesignTokens;
/**
 * Run all registered preprocessors on the dictionary,
 * returning the preprocessed dictionary in each step.
 *
 * @param {DesignTokens} tokens
 * @param {Record<string, preprocessor>} [preprocessorObj]
 * @returns {Promise<DesignTokens>}
 */
export function preprocess(tokens: DesignTokens, preprocessorObj?: Record<string, import("../../types/Preprocessor.d.ts").preprocessor> | undefined): Promise<DesignTokens>;
export type DesignTokens = import('../../types/DesignToken.d.ts').DesignTokens;
export type DesignToken = import('../../types/DesignToken.d.ts').DesignToken;
export type Preprocessor = import('../../types/Preprocessor.d.ts').Preprocessor;
export type preprocessor = import('../../types/Preprocessor.d.ts').preprocessor;
