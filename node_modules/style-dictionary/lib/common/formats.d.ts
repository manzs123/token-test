export default formats;
export type Format = import('../../types/Format.d.ts').Format;
export type Formatter = import('../../types/Format.d.ts').Formatter;
export type FormatOpts = import('../../types/Format.d.ts').FormatterArguments;
export type OutputReferences = import('../../types/Format.d.ts').OutputReferences;
export type Token = import('../../types/DesignToken.d.ts').TransformedToken;
export type Tokens = import('../../types/DesignToken.d.ts').TransformedTokens;
/**
 * @typedef {import('../../types/Format.d.ts').Format} Format
 * @typedef {import('../../types/Format.d.ts').Formatter} Formatter
 * @typedef {import('../../types/Format.d.ts').FormatterArguments} FormatOpts
 * @typedef {import('../../types/Format.d.ts').OutputReferences} OutputReferences
 * @typedef {import('../../types/DesignToken.d.ts').TransformedToken} Token
 * @typedef {import('../../types/DesignToken.d.ts').TransformedTokens} Tokens
 */
/**
 * @namespace Formats
 */
/**
 * @type {Record<string, Formatter>}
 */
declare const formats: Record<string, Formatter>;
